name: Build employees project
on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.package.outputs.version }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v5

         #   - name: Set build version
         #     id: set_version
         #     run: |
         #           VERSION="1.0.0-${GITHUB_RUN_NUMBER}"
         #           echo "Version=${VERSION}"
         #           echo "VERSION=${VERSION}" >> $GITHUB_ENV

            - name: Set up JDK 21
              uses: actions/setup-java@v5
              with:
                    distribution: 'temurin'
                    java-version: '21'
                    cache: 'maven'
            - name: Build with Maven
              id: package
              env:
                version: "1.0.0-${{ github.run_number }}"
              run: |
                echo "version=${{ env.version }}" >> "$GITHUB_OUTPUT"
                ./mvnw -B package -Drevision=${{ env.version }}
            - name: Archive production artifacts
              uses: actions/upload-artifact@v4
              with:
                    name: employees-jar
                    path: target/employees-*.jar

    integration-tests:
        if: false # Set to true to enable integration tests
        runs-on: ubuntu-latest
        needs: build
        env:
            SPRING_DATASOURCE_URL: jdbc:mariadb://localhost:3306/employees
            SPRING_DATASOURCE_USERNAME: employees
            SPRING_DATASOURCE_PASSWORD: employees
        services:
            mariadb:
                image: mariadb:12.1.1-rc
                env:
                    MARIADB_DATABASE: employees
                    MARIADB_USER: employees
                    MARIADB_PASSWORD: employees
                    MARIADB_ROOT_PASSWORD: employees
                ports:
                    - 3306:3306
                options: >-
                    --health-cmd="healthcheck.sh --connect --innodb_initialized"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=3
        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Set up JDK 21
              uses: actions/setup-java@v5
              with:
                    distribution: 'temurin'
                    java-version: '21'
                    cache: 'maven'

            - name: Build with Maven
              run: ./mvnw -B verify

    build-image:
        runs-on: ubuntu-latest
        needs: build
        permissions:
            contents: read
            packages: write
        env:
            version: ${{ needs.build.outputs.version }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Download Employee artifact
              uses: actions/download-artifact@v4
              with:
                  name: employees-jar
                  path: target/

            - name: Login to Github Container Registry
              uses: docker/login-action@v3
              with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v4
              with:
                    context: .
                    file: Dockerfile.layers
                    push: true
                    tags: ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:${{ env.version }}

    deploy:
        runs-on: ubuntu-latest
        needs: 
            - build
            - build-image
        env:
            version: ${{ needs.build.outputs.version }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Checkout infra repo
              uses: actions/checkout@v5
              with:
                    repository:  lakatoscs/employees-infra 
                    token: ${{ secrets.INFRA_GITHUB_TOKEN }}

            - name: Update deployment manifest
              run: |
                    yq e '.image.tag = "${{ env.VERSION }}"' -i values.yaml
                    cat values.yaml
            - name: Commit and push changes
              run: |
                    git config --global user.name 'github-actions'
                    git config --global user.email 'github-actions@users.noreply.github.com'
                    git commit -m "Update image tag to ${{ env.version }}"
                    git push origin main
